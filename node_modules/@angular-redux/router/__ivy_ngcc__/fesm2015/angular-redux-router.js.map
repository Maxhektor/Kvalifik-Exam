{"version":3,"file":"angular-redux-router.js","sources":["@angular-redux/router/actions.ts","@angular-redux/router/reducer.ts","@angular-redux/router/router.ts","@angular-redux/router/index.ts"],"names":[],"mappings":"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","sourcesContent":["export const UPDATE_LOCATION: string = '@angular-redux/router::UPDATE_LOCATION';\n","import { Action } from 'redux';\n\nimport { UPDATE_LOCATION } from './actions';\n\nexport const DefaultRouterState: string = '';\n\nexport interface RouterAction extends Action {\n  payload?: string;\n}\n\nexport function routerReducer(\n  state: string | undefined = DefaultRouterState,\n  action: RouterAction,\n): string {\n  switch (action.type) {\n    case UPDATE_LOCATION:\n      return action.payload || DefaultRouterState;\n    default:\n      return state;\n  }\n}\n","import { NgRedux } from '@angular-redux/store';\nimport { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { UPDATE_LOCATION } from './actions';\n\n@Injectable()\nexport class NgReduxRouter {\n  private initialized = false;\n  private currentLocation?: string;\n  private initialLocation?: string;\n  private urlState?: Observable<string>;\n\n  private urlStateSubscription?: Subscription;\n  private reduxSubscription?: Subscription;\n\n  constructor(\n    private router: Router,\n    private ngRedux: NgRedux<any>,\n    private location: Location,\n  ) {}\n\n  /**\n   * Destroys the bindings between @angular-redux/router and @angular/router.\n   * This method unsubscribes from both @angular-redux/router and @angular router, in case\n   * your app needs to tear down the bindings without destroying Angular or Redux\n   * at the same time.\n   */\n  destroy() {\n    if (this.urlStateSubscription) {\n      this.urlStateSubscription.unsubscribe();\n    }\n\n    if (this.reduxSubscription) {\n      this.reduxSubscription.unsubscribe();\n    }\n\n    this.initialized = false;\n  }\n\n  /**\n   * Initialize the bindings between @angular-redux/router and @angular/router\n   *\n   * This should only be called once for the lifetime of your app, for\n   * example in the constructor of your root component.\n   *\n   *\n   * @param selectLocationFromState Optional: If your\n   * router state is in a custom location, supply this argument to tell the\n   * bindings where to find the router location in the state.\n   * @param urlState$ Optional: If you have a custom setup\n   * when listening to router changes, or use a different router than @angular/router\n   * you can supply this argument as an Observable of the current url state.\n   */\n  initialize(\n    selectLocationFromState: (state: any) => string = state => state.router,\n    urlState$?: Observable<string> | undefined,\n  ) {\n    if (this.initialized) {\n      throw new Error(\n        '@angular-redux/router already initialized! If you meant to re-initialize, call destroy first.',\n      );\n    }\n\n    this.selectLocationFromState = selectLocationFromState;\n\n    this.urlState = urlState$ || this.getDefaultUrlStateObservable();\n\n    this.listenToRouterChanges();\n    this.listenToReduxChanges();\n    this.initialized = true;\n  }\n\n  private selectLocationFromState: (state: any) => string = state =>\n    state.router;\n\n  private getDefaultUrlStateObservable() {\n    return this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n      map(() => this.location.path()),\n      distinctUntilChanged(),\n    );\n  }\n\n  private getLocationFromStore(useInitial: boolean = false) {\n    return (\n      this.selectLocationFromState(this.ngRedux.getState()) ||\n      (useInitial ? this.initialLocation : '')\n    );\n  }\n\n  private listenToRouterChanges() {\n    const handleLocationChange = (location: string) => {\n      if (this.currentLocation === location) {\n        // Dont dispatch changes if we haven't changed location.\n        return;\n      }\n\n      this.currentLocation = location;\n      if (this.initialLocation === undefined) {\n        this.initialLocation = location;\n\n        // Fetch initial location from store and make sure\n        // we dont dispath an event if the current url equals\n        // the initial url.\n        const locationFromStore = this.getLocationFromStore();\n        if (locationFromStore === this.currentLocation) {\n          return;\n        }\n      }\n\n      this.ngRedux.dispatch({\n        type: UPDATE_LOCATION,\n        payload: location,\n      });\n    };\n\n    if (this.urlState) {\n      this.urlStateSubscription = this.urlState.subscribe(handleLocationChange);\n    }\n  }\n\n  private listenToReduxChanges() {\n    const handleLocationChange = (location: string) => {\n      if (this.initialLocation === undefined) {\n        // Wait for router to set initial location.\n        return;\n      }\n\n      const locationInStore = this.getLocationFromStore(true);\n      if (this.currentLocation === locationInStore) {\n        // Dont change router location if its equal to the one in the store.\n        return;\n      }\n\n      this.currentLocation = location;\n      this.router.navigateByUrl(location);\n    };\n\n    this.reduxSubscription = this.ngRedux\n      .select(state => this.selectLocationFromState(state))\n      .pipe(distinctUntilChanged())\n      .subscribe(handleLocationChange);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { UPDATE_LOCATION } from './actions';\nimport { RouterAction, routerReducer } from './reducer';\nimport { NgReduxRouter } from './router';\n\n@NgModule()\nexport class NgReduxRouterModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgReduxRouterModule,\n      providers: [NgReduxRouter],\n    };\n  }\n}\n\nexport { NgReduxRouter, RouterAction, routerReducer, UPDATE_LOCATION };\n"]}